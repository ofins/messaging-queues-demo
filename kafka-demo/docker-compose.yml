version: "3.8"

services:
  kafka1:
    image: confluentinc/cp-kafka:latest # Use latest for KRaft mode
    hostname: kafka1
    container_name: kafka1 # Explicitly name container for easier access
    ports:
      - "9092:9092" # Expose client listener to host
    environment:
      # --- KRaft Specific Core Configs ---
      KAFKA_BROKER_ID: 1 # Unique ID for this broker/node
      KAFKA_NODE_ID: 1 # For KRaft, broker.id and node.id are often the same
      KAFKA_PROCESS_ROLES: broker,controller # This node will act as both a broker and a controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9096" # Defines the controllers in the quorum (ID@host:port)
      CLUSTER_ID: ${CLUSTER_ID} # Loading from .env file

      # --- Listener Configurations for KRaft ---
      # KRaft requires specific listeners:
      # CLIENT:   For client connections (exposed to host)
      # BROKER:   For inter-broker communication (replication, internal messaging)
      # CONTROLLER: For KRaft controller quorum communication
      KAFKA_LISTENERS: CLIENT://0.0.0.0:9092,BROKER://kafka1:9094,CONTROLLER://kafka1:9093
      KAFKA_ADVERTISED_LISTENERS: CLIENT://localhost:9092,BROKER://kafka1:9094,CONTROLLER://kafka1:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,BROKER:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER # Listener for inter-broker communication
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER # Listener for controller communication

      # --- Other Standard Kafka Configs ---
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2 # For a 2-broker cluster, this provides redundancy
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2 # Minimum in-sync replicas for transaction log
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2 # Replication for transaction log
      KAFKA_LOG_DIRS: /tmp/kraft-kafka-logs # KRaft stores metadata and logs here
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true" # For development convenience
      KAFKA_CFG_NUM_PARTITIONS: 1 # Default partitions for auto-created topics

    # Optional: for persistent data
    # volumes:
    #   - kafka1-data:/tmp/kraft-kafka-logs

  kafka2:
    image: confluentinc/cp-kafka:latest # Use latest for KRaft mode
    hostname: kafka2
    container_name: kafka2 # Explicitly name container
    ports:
      - "9095:9095" # Expose client listener to host (different port than kafka1)
    environment:
      # --- KRaft Specific Core Configs (must match kafka1 where applicable) ---
      KAFKA_BROKER_ID: 2 # Unique ID
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9096" # Must match kafka1's voters
      CLUSTER_ID: ${CLUSTER_ID} # <--- PASTE THE SAME ID HERE

      # --- Listener Configurations for KRaft ---
      # Note: Client/Broker/Controller internal ports are different from kafka1 but follow the same pattern
      KAFKA_LISTENERS: CLIENT://0.0.0.0:9095,BROKER://kafka2:9097,CONTROLLER://kafka2:9096
      KAFKA_ADVERTISED_LISTENERS: CLIENT://localhost:9095,BROKER://kafka2:9097,CONTROLLER://localhost:9096
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,BROKER:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER

      # --- Other Standard Kafka Configs ---
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_LOG_DIRS: /tmp/kraft-kafka-logs
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CFG_NUM_PARTITIONS: 1

    # In KRaft, you don't 'depend_on' Zookeeper, but controllers need to find each other.
    # While not strictly necessary for Docker Compose (they'll start eventually),
    # adding a 'depends_on' on another broker can sometimes help with initial election.
    depends_on:
      - kafka1

    # Optional: for persistent data
    # volumes:
    #   - kafka2-data:/tmp/kraft-kafka-logs
# Optional: Define named volumes for persistent data
# volumes:
#   kafka1-data:
#   kafka2-data:
